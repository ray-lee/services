<extension target="org.nuxeo.elasticsearch.ElasticSearchComponent" point="elasticSearchIndex">
  <elasticSearchIndex name="index_name_placeholder" type="doc" repository="repository_name_placeholder">
    <fetchFromSource>
      <include>ecm:*</include>
      <include>dc:*</include>
      <exclude>ecm:binarytext</exclude>
    </fetchFromSource>

    <settings>
      {
        "analysis" : {
          "char_filter" : {
            "refname_displayname" : {
              "type" : "pattern_replace",
              "pattern" : "^.*?'(.*)'$",
              "replacement" : "$1"
            },
            "refname_shortid" : {
              "type" : "pattern_replace",
              "pattern" : "^.*:item:name\\((.*)\\).*$",
              "replacement" : "$1"
            },
            "doctype_tenant_unqualified" : {
              "type" : "pattern_replace",
              "pattern" : "^(.*?)(Tenant.*)?$",
              "replacement" : "$1"
            }
          },
          "filter" : {
            "en_stem_filter" : {
              "name" : "minimal_english",
              "type" : "stemmer"
            },
            "en_stop_filter" : {
              "stopwords" : [
                "_english_"
              ],
              "type" : "stop"
            },
            "fr_elision_filter" : {
              "articles" : [
                "c",
                "l",
                "m",
                "t",
                "qu",
                "n",
                "s",
                "j"
              ],
              "type" : "elision"
            },
            "fr_stem_filter" : {
              "name" : "minimal_french",
              "type" : "stemmer"
            },
            "fr_stop_filter" : {
              "stopwords" : [
                "_french_"
              ],
              "type" : "stop"
            }
          },
          "tokenizer" : {
            "path_tokenizer" : {
              "delimiter" : "/",
              "type" : "path_hierarchy"
            }
          },
          "analyzer" : {
            "en_analyzer" : {
              "alias" : "fulltext",
              "filter" : [
                "lowercase",
                "en_stop_filter",
                "en_stem_filter",
                "asciifolding"
              ],
              "type" : "custom",
              "tokenizer" : "standard"
            },
            "fr_analyzer" : {
              "filter" : [
                "lowercase",
                "fr_stop_filter",
                "fr_stem_filter",
                "asciifolding",
                "fr_elision_filter"
              ],
              "type" : "custom",
              "tokenizer" : "standard"
            },
            "path_analyzer" : {
              "type" : "custom",
              "tokenizer" : "path_tokenizer"
            },
            "refname_displayname_analyzer" : {
              "type" : "custom",
              "tokenizer" : "keyword",
              "char_filter" : ["refname_displayname"]
            },
            "refname_displayname_fulltext_analyzer" : {
              "char_filter" : ["refname_displayname"],
              "filter" : [
                "lowercase",
                "en_stop_filter",
                "en_stem_filter",
                "asciifolding"
              ],
              "type" : "custom",
              "tokenizer" : "standard"
            },
            "refname_shortid_analyzer" : {
              "type" : "custom",
              "tokenizer" : "keyword",
              "char_filter" : ["refname_shortid"]
            },
            "doctype_analyzer" : {
              "type" : "custom",
              "tokenizer" : "keyword",
              "char_filter" : ["doctype_tenant_unqualified"]
            },
            "sorting_analyzer" : {
              "filter" : [
                "lowercase",
                "asciifolding"
              ],
              "type" : "custom",
              "tokenizer" : "keyword"
            },
            "default" : {
              "type" : "custom",
              "tokenizer" : "keyword"
            }
          }
        }
      }
    </settings>

    <mapping>
      {
        "_size" : {
          "enabled" : true
        },
        "_all" : {
          "analyzer" : "fulltext"
        },
        "properties" : {
          "ecm:currentLifeCycleState": {
            "type": "string",
            "include_in_all": "false"
          },
          "ecm:primaryType": {
            "type": "string",
            "analyzer" : "doctype_analyzer",
            "include_in_all": "false"
          }
        }
      }
    </mapping>
  </elasticSearchIndex>
</extension>